<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>